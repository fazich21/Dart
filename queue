import 'dart:io';

class Queue {
  late int size;
  late List<int> elements;
  int front = -1;
  int rear = -1;

  Queue(int size) {
    this.size = size;
    elements = List<int>.filled(size, 0);
  }

  bool isFull() {
    return rear == size - 1;
  }

  bool isEmpty() {
    return front == -1;
  }

  void enQueue(int element) {
    if (isFull()) {
      print("Queue is full ");
      return;
    }
    if (front == -1) {
      front = 0;
    }
    rear++;
    elements[rear] = element;
    print("$Element Entered to the Queue ");
  }

  void deQueue() {
    if (isEmpty()) {
      print("Queue is Empty ");
      return;
    }
    int element = elements[front];
    if (front == rear) {
      front = rear = -1;
    } else {
      front++;
    }
    print("$Element Deleted From the Queue ");
  }

  void display() {
    if (isEmpty()) {
      print("Queue is Empty");
      return;
    }
    print("Elements in the Queue ");
    for (int i = front; i <= rear; i++) {
      print(elements[i]);
    }
  }
}

void main() {
  print("Enter the size of Queue =");
  int size = int.parse(stdin.readLineSync()!);
  Queue queue = Queue(size);

  while (true) {
    print("1. isFull");
    print("2. isEmpty");
    print("3. enQueue");
    print("4. deQueue");
    print("5. display");
    print("6. exit");
    print("Enter your choice =");

    int choice = int.parse(stdin.readLineSync()!);

    switch (choice) {
      case 1:
        print("Queue is full = ${queue.isFull()}");
        break;
      case 2:
        print("Queue is empty = ${queue.isEmpty()}");
        break;
      case 3:
        print("Enter the element to enqueue/enter =");
        int element = int.parse(stdin.readLineSync()!);
        queue.enQueue(element);
        break;
      case 4:
        queue.deQueue();
        break;
      case 5:
        queue.display();
        break;
      case 6:
        print("Exiting... ");
        return;
      default:
        print(" your choice is invalid");
    }
  }
}
